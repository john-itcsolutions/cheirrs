"options":
  "extra_packages":
    "description": >
      Space separated list of extra deb packages to install.
    "type": "string"
    "default": ""
  "package_status":
    "default": "install"
    "type": "string"
    "description": >
      The status of service-affecting packages will be set to this
      value in the dpkg database. Valid values are "install" and "hold".
  "install_sources":
    "description": >
      List of extra apt sources, per charm-helpers standard
      format (a yaml list of strings encoded as a string). Each source
      may be either a line that can be added directly to
      sources.list(5), or in the form ppa:<user>/<ppa-name> for adding
      Personal Package Archives, or a distribution component to enable.
    "type": "string"
    "default": ""
  "install_keys":
    "description": >
      List of signing keys for install_sources package sources, per
      charmhelpers standard format (a yaml list of strings encoded as
      a string). The keys should be the full ASCII armoured GPG public
      keys. While GPG key ids are also supported and looked up on a
      keyserver, operators should be aware that this mechanism is
      insecure. null can be used if a standard package signing key is
      used that will already be installed on the machine, and for PPA
      sources where the package signing key is securely retrieved from
      Launchpad.
    "type": "string"
    "default": ""
  "nagios_context":
    "default": "juju"
    "type": "string"
    "description": |
      Used by the nrpe subordinate charms.
      A string that will be prepended to instance name to set the host name
      in nagios. So for instance the hostname would be something like:
          juju-myservice-0
      If you're running multiple environments with the same services in them
      this allows you to differentiate between them.
  "nagios_servicegroups":
    "default": ""
    "type": "string"
    "description": |
      A comma-separated list of nagios servicegroups.
      If left empty, the nagios_context will be used as the servicegroup
  "apt-key-server":
    "description": "APT Key Server"
    "type": "string"
    "default": "hkp://keyserver.ubuntu.com:80"
  "docker-opts":
    "type": "string"
    "default": ""
    "description": |
      Docker daemon command line arguments that are passed to `dockerd` when
      it starts, e.g. `--insecure-registry`.

      Prefer to use `daemon-opts` instead of this. See the `daemon-opts`
      description for more info.
  "daemon-opts":
    "type": "string"
    "default": |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "100"
        }
      }
    "description": |
      Docker daemon configuration options, in json format, which are written
      directly to `/etc/docker/daemon.json`.

      Prefer to use this instead of `docker-opts`. While the two can
      be used together, care should be taken to not specify the same option
      in both places. Doing so will cause the Docker daemon to exit with an
      error.

      More info about available options can be found at
      https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file
  "enable-cgroups":
    "type": "boolean"
    "default": "false"
    "description": |
      Enable GRUB cgroup overrides cgroup_enable=memory swapaccount=1. WARNING
      changing this option will reboot the host - use with caution on production
      services.
  "install_from_upstream":
    "type": "boolean"
    "default": "false"
    "description": |
      Toggle installation from Ubuntu archive vs the Docker PPA (DEPRECATED; please use docker_runtime instead).
  "docker_runtime":
    "type": "string"
    "default": "auto"
    "description": |
      Docker runtime to install valid values are "upstream" (Docker PPA), "nvidia" (Nvidia PPA),
      "apt" (Ubuntu archive), "auto" (Nvidia PPA or Ubuntu archive, based on your hardware),
      or "custom" (must have set `docker_runtime_repo` URL, `docker_runtime_key_url` URL and
      `docker_runtime_package` name).
  "docker_runtime_repo":
    "type": "string"
    "default": ""
    "description": |
      Custom Docker repository, given in deb format.  Use `{ARCH}` to determine architecture at
      runtime.  Use `{CODE}` to set release codename.  E.g.
      `deb [arch={ARCH}] https://download.docker.com/linux/ubuntu {CODE} stable`.
  "docker_runtime_key_url":
    "type": "string"
    "default": ""
    "description": |
      Custom Docker repository validation key URL.
  "docker_runtime_package":
    "type": "string"
    "default": ""
    "description": |
      Custom Docker repository package name.
  "cuda_repo":
    "type": "string"
    "default": "10.0.130-1"
    "description": |
      The cuda-repo package version to install.
  "nvidia-docker-package":
    "type": "string"
    "default": "nvidia-docker2=2.0.3+docker18.09.1-1"
    "description": |
      The pinned version of nvidia-docker2 package.
  "nvidia-container-runtime-package":
    "type": "string"
    "default": "nvidia-container-runtime=2.0.0+docker18.09.1-1"
    "description": |
      The pinned version of nvidia-container-runtime package.
  "docker-ce-package":
    "type": "string"
    "default": "docker-ce=5:18.09.1~3-0~ubuntu-bionic"
    "description": |
      The pinned version of docker-ce package installed with nvidia-docker.
  "http_proxy":
    "type": "string"
    "default": ""
    "description": |
      URL to use for HTTP_PROXY to be used by Docker. Useful in
      egress-filtered environments where a proxy is the only option for
      accessing the registry to pull images.
  "https_proxy":
    "type": "string"
    "default": ""
    "description": |
      URL to use for HTTPS_PROXY to be used by Docker. Useful in
      egress-filtered environments where a proxy is the only option for
      accessing the registry to pull images.
  "no_proxy":
    "type": "string"
    "default": ""
    "description": |
      Comma-separated list of destinations (either domain names or IP
      addresses) which should be accessed directly, rather than through
      the proxy defined in http_proxy or https_proxy. Must be less than
      2023 characters long.
  "auth-basic-password":
    "type": "string"
    "default": ""
    "description": |
      Password for basic (htpasswd) authentication. Set this to something
      other than an empty string to configure basic auth for the registry.
  "auth-basic-user":
    "type": "string"
    "default": "admin"
    "description": "Username for basic (htpasswd) authentication."
  "auth-token-issuer":
    "type": "string"
    "default": ""
    "description": "The name on the certificate that authentication tokens must me\
      \ signed by."
  "auth-token-realm":
    "type": "string"
    "default": ""
    "description": "The location from which clients should fetch authentication tokens."
  "auth-token-root-certs":
    "type": "string"
    "default": ""
    "description": "The root certificate bundle (base64 encoded) for the authentication\
      \ tokens."
  "auth-token-service":
    "type": "string"
    "default": ""
    "description": "The name of the server which authentication tokens will be addressed\
      \ to."
  "http-host":
    "type": "string"
    "default": ""
    "description": |
      The external URL where the docker registry is hosted. This URL will
      be prepended to all locations generated by the docker registry to
      ensure that those URLs are reachable by the client.  For example
      "https://example.com/docker-registry/". Any path component must
      include a trailing "/". If this is not configured then the docker
      registry will derive its location from the incoming requests.
  "log-level":
    "type": "string"
    "default": "info"
    "description": "Logging output level ('error', 'warn', 'info', or 'debug')."
  "registry-image":
    "type": "string"
    "default": "registry:2"
    "description": "Registry image."
  "registry-name":
    "type": "string"
    "default": "registry"
    "description": "Name of the registry container."
  "registry-port":
    "type": "int"
    "default": !!int "5000"
    "description": "The external port on which the docker registry listens."
  "storage-delete":
    "type": "boolean"
    "default": "false"
    "description": |
      Enable/disable the "delete" storage option. False, the default, disables
      this option in the registry config file.
  "storage-read-only":
    "type": "boolean"
    "default": "false"
    "description": |
      Enable/disable the "readonly" storage maintenance option. False, the
      default, disables this option in the registry config file.
  "storage-swift-authurl":
    "type": "string"
    "default": ""
    "description": "The URL of the keystone used to authenticate to swift."
  "storage-swift-container":
    "type": "string"
    "default": "docker-registry"
    "description": "The name of the swift container that will hold the images."
  "storage-swift-password":
    "type": "string"
    "default": ""
    "description": "The password to use to access swift."
  "storage-swift-region":
    "type": "string"
    "default": ""
    "description": "The region containing the swift service."
  "storage-swift-tenant":
    "type": "string"
    "default": ""
    "description": "The tenant containing the swift service."
  "storage-swift-username":
    "type": "string"
    "default": ""
    "description": "The username to use to access swift."
  "storage-swift-domain":
    "type": "string"
    "default": ""
    "description": "Openstack Identity v3 API domain."
  "tls-ca-blob":
    "type": "string"
    "default": ""
    "description": "Base64 encoded TLS CA certificate (overwrites tls-cert-path file)."
  "tls-cert-blob":
    "type": "string"
    "default": ""
    "description": "Base64 encoded TLS certificate (overwrites tls-cert-path file)."
  "tls-key-blob":
    "type": "string"
    "default": ""
    "description": "Base64 encoded TLS certificate private key (overwrites tls-key-path\
      \ file)."
  "tls-ca-path":
    "type": "string"
    "default": "/etc/docker/registry/ca.crt"
    "description": "Path to the TLS CA certificate."
  "tls-cert-path":
    "type": "string"
    "default": "/etc/docker/registry/registry.crt"
    "description": "Path to the TLS certificate."
  "tls-key-path":
    "type": "string"
    "default": "/etc/docker/registry/registry.key"
    "description": "Path the the TLS certificate private key."
